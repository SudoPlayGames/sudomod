// https://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-integration-testing/

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    api {
        java {
            compileClasspath += sourceSets.main.runtimeClasspath
            runtimeClasspath += sourceSets.main.runtimeClasspath

            srcDir file('src/api/java/')
        }
    }
    testIntegration {
        java {
            compileClasspath += sourceSets.test.runtimeClasspath
            compileClasspath += sourceSets.api.runtimeClasspath

            runtimeClasspath += sourceSets.test.runtimeClasspath
            runtimeClasspath += sourceSets.api.runtimeClasspath

            srcDir file('src/test-integration/java')
        }
        resources.srcDir file('src/test-integration/resources')
    }
    modA {
        java {
            srcDir file('mods/mod-a')
        }
    }
    modB {
        java {
            srcDir file('mods/mod-b')
        }
    }
    modC {
        java {
            srcDir file('mods/mod-c')
        }
    }
    modD {
        java {
            srcDir file('mods/mod-d')
        }
    }
}

configurations {
    testCompile {
        exclude module: 'share'
    }
    testIntegrationCompile.extendsFrom testCompile
    testIntegrationRuntime.extendsFrom testRuntime
    modA
    modB
    modC
    modD
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'ch.qos.logback:logback-core:1.1.2'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.slf4j:slf4j-ext:1.7.7'

    compile files('libs/janino-3.0.6-patch.jar')
    compile 'org.codehaus.janino:commons-compiler:3.0.6'
    compile 'org.ow2.asm:asm-all:5.2'
    compile 'org.jetbrains:annotations:15.0'

    modACompile sourceSets.api.output
    modACompile files('mods/mod-a/sudomath.jar')

    modBCompile sourceSets.api.output
    modBCompile sourceSets.modA.output
    modBCompile files('mods/mod-a/sudomath.jar')

    modCCompile sourceSets.api.output
    modCCompile sourceSets.modB.output

    modDCompile sourceSets.api.output
    modDCompile sourceSets.modA.output
    modDCompile files('mods/mod-a/sudomath.jar')
    modDCompile sourceSets.modB.output

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:2+'
    testIntegrationCompile 'org.assertj:assertj-core:3.6.2'
}

task testIntegration(type: Test) {
    testClassesDir = sourceSets.testIntegration.output.classesDir
    classpath = sourceSets.testIntegration.runtimeClasspath
    outputs.upToDateWhen { false }
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

check.dependsOn testIntegration
testIntegration.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}