// https://www.petrikainulainen.net/programming/gradle/getting-started-with-gradle-integration-testing/

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    testIntegration {
        java {
            compileClasspath += sourceSets.test.runtimeClasspath
            runtimeClasspath += sourceSets.test.runtimeClasspath
            srcDir file('src/test-integration/java')
        }
        resources.srcDir file('src/test-integration/resources')
    }
}

configurations {
    testCompile {
        exclude module: 'share'
    }
    testIntegrationCompile.extendsFrom testCompile
    testIntegrationRuntime.extendsFrom testRuntime
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'ch.qos.logback:logback-core:1.1.2'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.slf4j:slf4j-ext:1.7.7'

    compile 'com.eclipsesource.minimal-json:minimal-json:0.9.4'
    compile 'org.codehaus.janino:janino:3.0.6'
    compile 'org.jetbrains:annotations:15.0'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:2+'
    testIntegrationCompile 'org.assertj:assertj-core:3.6.2'
}

task testIntegration(type: Test) {
    testClassesDir = sourceSets.testIntegration.output.classesDir
    classpath = sourceSets.testIntegration.runtimeClasspath
    outputs.upToDateWhen { false }
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}

check.dependsOn testIntegration
testIntegration.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}